// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="app--header"
        >
          <h1
            className="logo"
          >
            <Link
              className="title"
              replace={false}
              to="/"
            >
              Gousto
            </Link>
          </h1>
        </header>,
        <main>
          <Route
            component={[Function]}
            exact={true}
            path="/:categoryId?"
          />
        </main>,
      ],
      "className": "app",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h1
            className="logo"
          >
            <Link
              className="title"
              replace={false}
              to="/"
            >
              Gousto
            </Link>
          </h1>,
          "className": "app--header",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Link
              className="title"
              replace={false}
              to="/"
            >
              Gousto
            </Link>,
            "className": "logo",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Gousto",
              "className": "title",
              "replace": false,
              "to": "/",
            },
            "ref": null,
            "rendered": "Gousto",
            "type": [Function],
          },
          "type": "h1",
        },
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Route
            component={[Function]}
            exact={true}
            path="/:categoryId?"
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "exact": true,
            "path": "/:categoryId?",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "main",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="app--header"
          >
            <h1
              className="logo"
            >
              <Link
                className="title"
                replace={false}
                to="/"
              >
                Gousto
              </Link>
            </h1>
          </header>,
          <main>
            <Route
              component={[Function]}
              exact={true}
              path="/:categoryId?"
            />
          </main>,
        ],
        "className": "app",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h1
              className="logo"
            >
              <Link
                className="title"
                replace={false}
                to="/"
              >
                Gousto
              </Link>
            </h1>,
            "className": "app--header",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Link
                className="title"
                replace={false}
                to="/"
              >
                Gousto
              </Link>,
              "className": "logo",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Gousto",
                "className": "title",
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": "Gousto",
              "type": [Function],
            },
            "type": "h1",
          },
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Route
              component={[Function]}
              exact={true}
              path="/:categoryId?"
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/:categoryId?",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "main",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
